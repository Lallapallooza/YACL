.TH "yacl" 3 "Wed Aug 22 2018" "YACL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
yacl
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "class \fBConfig\fP"
.br
.RI "Main YACL config class\&. "
.ti -1c
.RI "struct \fBContentTypeToType\fP"
.br
.RI "Generic ContentType to real type converter\&. "
.ti -1c
.RI "struct \fBContentTypeToType< ContentType::BOOL_VALUE >\fP"
.br
.RI "bool ContentType to real type converter "
.ti -1c
.RI "struct \fBContentTypeToType< ContentType::FLOAT_VALUE >\fP"
.br
.RI "float ContentType to real type converter "
.ti -1c
.RI "struct \fBContentTypeToType< ContentType::INT_VALUE >\fP"
.br
.RI "int ContentType to real type converter "
.ti -1c
.RI "struct \fBContentTypeToType< ContentType::STRING_VALUE >\fP"
.br
.RI "string ContentType to real type converter "
.ti -1c
.RI "struct \fBContentTypeToType< ContentType::VECTOR_BOOL_VALUE >\fP"
.br
.RI "bool_vector ContentType to real type converter "
.ti -1c
.RI "struct \fBContentTypeToType< ContentType::VECTOR_FLOAT_VALUE >\fP"
.br
.RI "float_vector ContentType to real type converter "
.ti -1c
.RI "struct \fBContentTypeToType< ContentType::VECTOR_INT_VALUE >\fP"
.br
.RI "int_vector ContentType to real type converter "
.ti -1c
.RI "struct \fBContentTypeToType< ContentType::VECTOR_STRING_VALUE >\fP"
.br
.RI "str_vector ContentType to real type converter "
.ti -1c
.RI "class \fBField\fP"
.br
.RI "YACL \fBField\fP class, that contains simple types of config\&. "
.ti -1c
.RI "class \fBSetting\fP"
.br
.RI "YACL node class\&. "
.ti -1c
.RI "class \fBSettingsUniquePtr\fP"
.br
.ti -1c
.RI "class \fBYACLException\fP"
.br
.RI "YACL Exception class\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBint_vector\fP = std::vector< int >"
.br
.RI "std::vector<int> alias "
.ti -1c
.RI "using \fBfloat_vector\fP = std::vector< float >"
.br
.RI "std::vector<float> alias "
.ti -1c
.RI "using \fBstr_vector\fP = std::vector< std::string >"
.br
.RI "std::vector<std::string> alias "
.ti -1c
.RI "using \fBbool_vector\fP = std::vector< bool >"
.br
.RI "std::vector<bool> alias "
.ti -1c
.RI "using \fBint_initlist\fP = std::initializer_list< int >"
.br
.RI "std::initializer_list<int> alias "
.ti -1c
.RI "using \fBfloat_initlist\fP = std::initializer_list< float >"
.br
.RI "std::initializer_list<int> alias "
.ti -1c
.RI "using \fBstr_initlist\fP = std::initializer_list< std::string >"
.br
.RI "std::initializer_list<int> alias "
.ti -1c
.RI "using \fBbool_initlist\fP = std::initializer_list< bool >"
.br
.RI "std::initializer_list<int> alias "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBContentType\fP { \fBContentType::INT_VALUE\fP = 0, \fBContentType::BOOL_VALUE\fP, \fBContentType::FLOAT_VALUE\fP, \fBContentType::STRING_VALUE\fP, \fBContentType::VECTOR_INT_VALUE\fP, \fBContentType::VECTOR_FLOAT_VALUE\fP, \fBContentType::VECTOR_STRING_VALUE\fP, \fBContentType::VECTOR_BOOL_VALUE\fP, \fBContentType::NOT_INIT\fP }"
.br
.RI "Supported primitive types\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<class T , TEMPLATE_IS_SAME(T, int) > \fBContentType\fP \fBtypeToContentTypeEnum\fP () noexcept"
.br
.RI "int to ContentType converter "
.ti -1c
.RI "template<class T , TEMPLATE_IS_SAME(T, int) > const char * \fBtypeToString\fP () noexcept"
.br
.RI "int to string converter "
.ti -1c
.RI "\fBContentType\fP \fBgetTypeOfRaw\fP (const std::string &str) noexcept"
.br
.RI "Get simple type from string simple: int, float, bool, string\&. "
.ti -1c
.RI "bool \fBisArrayOfSameType\fP (const std::string &str, \fBContentType\fP force_type=\fBContentType::NOT_INIT\fP) noexcept"
.br
.RI "Detecting is array contain same type elements\&. "
.ti -1c
.RI "std::string \fBstrToStr\fP (const std::string &str) noexcept"
.br
.RI "Format string 'my str' -> my str\&. "
.ti -1c
.RI "int \fBstrToInt\fP (const std::string &str) noexcept"
.br
.RI "Convert string to int\&. "
.ti -1c
.RI "float \fBstrToFloat\fP (const std::string &str) noexcept"
.br
.RI "Convert string to float\&. "
.ti -1c
.RI "bool \fBstrToBool\fP (const std::string &str) noexcept"
.br
.RI "Convert string to bool\&. "
.ti -1c
.RI "\fBint_vector\fP \fBraw_to_vector_ints\fP (const std::string &raw_vector) noexcept"
.br
.RI "String to vector int converter\&. "
.ti -1c
.RI "\fBfloat_vector\fP \fBraw_to_vector_floats\fP (const std::string &raw_vector) noexcept"
.br
.RI "String to vector float converter\&. "
.ti -1c
.RI "\fBstr_vector\fP \fBraw_to_vector_strings\fP (const std::string &raw_vector) noexcept"
.br
.RI "String to vector string converter\&. "
.ti -1c
.RI "\fBbool_vector\fP \fBraw_to_vector_bools\fP (const std::string &raw_vector) noexcept"
.br
.RI "String to vector bool converter\&. "
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "using \fByacl::bool_initlist\fP = typedef std::initializer_list<bool>"

.PP
std::initializer_list<int> alias 
.PP
Definition at line 52 of file types\&.h\&.
.SS "using \fByacl::bool_vector\fP = typedef std::vector<bool>"

.PP
std::vector<bool> alias 
.PP
Definition at line 29 of file types\&.h\&.
.SS "using \fByacl::float_initlist\fP = typedef std::initializer_list<float>"

.PP
std::initializer_list<int> alias 
.PP
Definition at line 40 of file types\&.h\&.
.SS "using \fByacl::float_vector\fP = typedef std::vector<float>"

.PP
std::vector<float> alias 
.PP
Definition at line 17 of file types\&.h\&.
.SS "using \fByacl::int_initlist\fP = typedef std::initializer_list<int>"

.PP
std::initializer_list<int> alias 
.PP
Definition at line 34 of file types\&.h\&.
.SS "using \fByacl::int_vector\fP = typedef std::vector<int>"

.PP
std::vector<int> alias 
.PP
Definition at line 11 of file types\&.h\&.
.SS "using \fByacl::str_initlist\fP = typedef std::initializer_list<std::string>"

.PP
std::initializer_list<int> alias 
.PP
Definition at line 46 of file types\&.h\&.
.SS "using \fByacl::str_vector\fP = typedef std::vector<std::string>"

.PP
std::vector<std::string> alias 
.PP
Definition at line 23 of file types\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fByacl::ContentType\fP\fC [strong]\fP"

.PP
Supported primitive types\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIINT_VALUE \fP\fP
.TP
\fB\fIBOOL_VALUE \fP\fP
.TP
\fB\fIFLOAT_VALUE \fP\fP
.TP
\fB\fISTRING_VALUE \fP\fP
.TP
\fB\fIVECTOR_INT_VALUE \fP\fP
.TP
\fB\fIVECTOR_FLOAT_VALUE \fP\fP
.TP
\fB\fIVECTOR_STRING_VALUE \fP\fP
.TP
\fB\fIVECTOR_BOOL_VALUE \fP\fP
.TP
\fB\fINOT_INIT \fP\fP
.PP
Definition at line 58 of file types\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fByacl::ContentType\fP yacl::getTypeOfRaw (const std::string & str)\fC [noexcept]\fP"

.PP
Get simple type from string simple: int, float, bool, string\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP string for paring 
.RE
.PP
\fBReturns:\fP
.RS 4
ContentType of str, if can't parse return \fBContentType::NOT_INIT\fP 
.RE
.PP

.PP
Definition at line 6 of file grammar\&.cpp\&.
.SS "bool yacl::isArrayOfSameType (const std::string & str, \fByacl::ContentType\fP force_type = \fC\fBContentType::NOT_INIT\fP\fP)\fC [noexcept]\fP"

.PP
Detecting is array contain same type elements\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP string for parsing 
.br
\fIforce_type\fP hint for type searching, if value not setted, using 1st elements type 
.RE
.PP
\fBReturns:\fP
.RS 4
true if array of same type, false otherwise 
.RE
.PP

.PP
Definition at line 16 of file grammar\&.cpp\&.
.SS "\fByacl::bool_vector\fP yacl::raw_to_vector_bools (const std::string & raw_vector)\fC [noexcept]\fP"

.PP
String to vector bool converter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIraw_vector\fP string to be converted 
.RE
.PP
\fBReturns:\fP
.RS 4
vector with type bool 
.RE
.PP

.PP
Definition at line 22 of file converter\&.cpp\&.
.SS "\fByacl::float_vector\fP yacl::raw_to_vector_floats (const std::string & raw_vector)\fC [noexcept]\fP"

.PP
String to vector float converter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIraw_vector\fP string to be converted 
.RE
.PP
\fBReturns:\fP
.RS 4
vector with type float 
.RE
.PP

.PP
Definition at line 10 of file converter\&.cpp\&.
.SS "\fByacl::int_vector\fP yacl::raw_to_vector_ints (const std::string & raw_vector)\fC [noexcept]\fP"

.PP
String to vector int converter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIraw_vector\fP string to be converted 
.RE
.PP
\fBReturns:\fP
.RS 4
vector with type int 
.RE
.PP

.PP
Definition at line 6 of file converter\&.cpp\&.
.SS "\fByacl::str_vector\fP yacl::raw_to_vector_strings (const std::string & raw_vector)\fC [noexcept]\fP"

.PP
String to vector string converter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIraw_vector\fP string to be converted 
.RE
.PP
\fBReturns:\fP
.RS 4
vector with type string 
.RE
.PP

.PP
Definition at line 16 of file converter\&.cpp\&.
.SS "bool yacl::strToBool (const std::string & str)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Convert string to bool\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP string for format 
.RE
.PP
\fBReturns:\fP
.RS 4
bool value from string 
.RE
.PP

.PP
Definition at line 44 of file converter\&.h\&.
.SS "float yacl::strToFloat (const std::string & str)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Convert string to float\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP string for format 
.RE
.PP
\fBReturns:\fP
.RS 4
float value from string 
.RE
.PP

.PP
Definition at line 34 of file converter\&.h\&.
.SS "int yacl::strToInt (const std::string & str)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Convert string to int\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP string for format 
.RE
.PP
\fBReturns:\fP
.RS 4
int value from string 
.RE
.PP

.PP
Definition at line 25 of file converter\&.h\&.
.SS "std::string yacl::strToStr (const std::string & str)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Format string 'my str' -> my str\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP string for format 
.RE
.PP
\fBReturns:\fP
.RS 4
formated string 
.RE
.PP

.PP
Definition at line 16 of file converter\&.h\&.
.SS "template<class T , TEMPLATE_IS_SAME(T, int) > \fBContentType\fP yacl::typeToContentTypeEnum ()\fC [noexcept]\fP"

.PP
int to ContentType converter strt_vector to ContentType converter
.PP
bool_vector to ContentType converter
.PP
float_vector to ContentType converter
.PP
int_vector to ContentType converter
.PP
string to ContentType converter
.PP
bool to ContentType converter
.PP
float to ContentType converter
.PP
\fBReturns:\fP
.RS 4
ContentType 
.RE
.PP

.PP
Definition at line 21 of file types_conversation\&.h\&.
.SS "template<class T , TEMPLATE_IS_SAME(T, int) > const char * yacl::typeToString ()\fC [noexcept]\fP"

.PP
int to string converter str_vector to string converter
.PP
bool_vector to string converter
.PP
float_vector to string converter
.PP
int_vector to string converter
.PP
string to string converter
.PP
bool to string converter
.PP
float to string converter
.PP
\fBReturns:\fP
.RS 4
type name 
.RE
.PP

.PP
Definition at line 89 of file types_conversation\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for YACL from the source code\&.
