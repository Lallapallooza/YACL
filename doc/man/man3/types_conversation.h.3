.TH "include/YACL/types_conversation.h" 3 "Wed Aug 22 2018" "YACL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/YACL/types_conversation.h
.SH SYNOPSIS
.br
.PP
\fC#include <YACL/types\&.h>\fP
.br
\fC#include <iostream>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fByacl::ContentTypeToType< T >\fP"
.br
.RI "Generic ContentType to real type converter\&. "
.ti -1c
.RI "struct \fByacl::ContentTypeToType< ContentType::INT_VALUE >\fP"
.br
.RI "int ContentType to real type converter "
.ti -1c
.RI "struct \fByacl::ContentTypeToType< ContentType::FLOAT_VALUE >\fP"
.br
.RI "float ContentType to real type converter "
.ti -1c
.RI "struct \fByacl::ContentTypeToType< ContentType::BOOL_VALUE >\fP"
.br
.RI "bool ContentType to real type converter "
.ti -1c
.RI "struct \fByacl::ContentTypeToType< ContentType::STRING_VALUE >\fP"
.br
.RI "string ContentType to real type converter "
.ti -1c
.RI "struct \fByacl::ContentTypeToType< ContentType::VECTOR_INT_VALUE >\fP"
.br
.RI "int_vector ContentType to real type converter "
.ti -1c
.RI "struct \fByacl::ContentTypeToType< ContentType::VECTOR_BOOL_VALUE >\fP"
.br
.RI "bool_vector ContentType to real type converter "
.ti -1c
.RI "struct \fByacl::ContentTypeToType< ContentType::VECTOR_STRING_VALUE >\fP"
.br
.RI "str_vector ContentType to real type converter "
.ti -1c
.RI "struct \fByacl::ContentTypeToType< ContentType::VECTOR_FLOAT_VALUE >\fP"
.br
.RI "float_vector ContentType to real type converter "
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fByacl\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBTEMPLATE_IS_SAME\fP(firstT,  secondT)"
.br
.ti -1c
.RI "#define \fBTEMPLATE_IS_NOT_SAME\fP(firstT,  secondT)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<class T , TEMPLATE_IS_SAME(T, int) > ContentType \fByacl::typeToContentTypeEnum\fP () noexcept"
.br
.RI "int to ContentType converter "
.ti -1c
.RI "template<class T , TEMPLATE_IS_SAME(T, int) > const char * \fByacl::typeToString\fP () noexcept"
.br
.RI "int to string converter "
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define TEMPLATE_IS_NOT_SAME(firstT, secondT)"
\fBValue:\fP
.PP
.nf
typename std::enable_if<!std::is_same<firstT, secondT>::value>::type * = \
      nullptr
.fi
.PP
Definition at line 12 of file types_conversation\&.h\&.
.SS "#define TEMPLATE_IS_SAME(firstT, secondT)"
\fBValue:\fP
.PP
.nf
typename std::enable_if<std::is_same<firstT, secondT>::value>::type * = \
      nullptr
.fi
.PP
Definition at line 8 of file types_conversation\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for YACL from the source code\&.
